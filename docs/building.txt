==================================
Copyright (C) 2020 Daniel M Tyler.
  This file is part of Ellie.
==================================

Directory Structure:
    assets: Raw Assets.
    build/<buildname>: (Empty) Builds.
    docs: Documentation.
    release: Everything needed to run the game, minus the binaries.
    src: Source Code.
    thirdparty: (Empty) Third-party Dependencies.

Dependencies:
    CMake v3.15.6: Project build tool.
    Dear ImGui [ae1e361] (Git Submodule): Immediate Mode GUI.
    GLAD (Web Service): OpenGL Loader/Generator (see GLAD Options below).
    GLM [13724cf] (Git Submodule): OpenGL Mathmatics.
    fmt [cd0b3f9] (Git Submodule): Formatting library.
    SDL2 v2.0.10: Platform/OpenGL functions.
    spdlog [40bb28e] (Git Submodule): Logging library.
    Sean T. Barrett's stb [f67165c] (Git Submodule): Various modules available, only some used.

GLAD Options:
    OpenGL loader generated by glad 0.1.33 on Thu Jan  2 08:10:35 2020.
    
    Language/Generator: C/C++
    Specification: gl
    APIs: gl=3.3
    Profile: core
    Extensions:
        
    Loader: True
    Local files: False
    Omit khrplatform: False
    Reproducible: False
    
    Commandline:
        --profile="core" --api="gl=3.3" --generator="c" --spec="gl" --extensions=""
    Online:
        https://glad.dav1d.de/#profile=core&language=c&specification=gl&loader=on&api=gl%3D3.3

Win64 Build Instructions:
    NOTE: On Windows, CMake only supports clang/clang++ from MSYS2 and clang-cl from llvm.org.
          See: https://stackoverflow.com/a/55610399 and https://gitlab.kitware.com/cmake/cmake/issues/18880.
    NOTE: Because MSYS2 MinGW64 packages are compiled with MinGW64, spdlog gives "duplicate section ... has different size" linker errors for libspdlog.a and libfmt.a when compiling with Clang. This is the only time I've seen an incompatibility between Clang/GCC, but it means we have to compile and install spdlog and fmt ourselves.
    1.1) Install MSYS2 x64 from https://www.msys2.org/.
    1.2) Update MSYS2 package database with "pacman -Syu" and then close the window.
    1.3) Open MSYS2 MinGW64 Shell and update packages with "pacman -Su".
    1.4) Install thirdparty (Qt5 is for cmake-gui) with "pacman -S base-devel mingw-w64-x86_64-toolchain git mingw-w64-x86_64-cmake mingw-w64-x86_64-qt5 mingw-w64-x86_64-clang mingw-w64-x86_64-SDL2".
    2) Update Git Submodule thirdparty if not pulled in already.
    3.1) mkdir thirdparty/fmt/build.
    3.2) cd thirdparty/fmt/build.
    3.3) cmake ../ -G"MSYS Makefiles" -DCMAKE_BUILD_TYPE=Release -DCMAKE_C_COMPILER=/mingw64/bin/clang.exe -DCMAKE_CXX_COMPILER=/mingw64/bin/clang++.exe -DCMAKE_INSTALL_PREFIX=/mingw64/x86_64-w64-mingw32 -DCMAKE_PREFIX_PATH=/mingw64/x86_64-w64-mingw32 -DFMT_TEST=False.
    3.4) make && make install.
    4.1) mkdir thirdparty/spdlog/build.
    4.2) cd thirdparty/spdlog/build.
    4.3) cmake ../ -G"MSYS Makefiles" -DCMAKE_BUILD_TYPE=Release -DCMAKE_C_COMPILER=/mingw64/bin/clang.exe -DCMAKE_CXX_COMPILER=/mingw64/bin/clang++.exe -DCMAKE_INSTALL_PREFIX=/mingw64/x86_64-w64-mingw32 -DCMAKE_PREFIX_PATH=/mingw64/x86_64-w64-mingw32 -DSPDLOG_BUILD_EXAMPLE=False -DSPDLOG_BUILD_TESTS=False -DSPDLOG_FMT_EXTERNAL=True.
    4.4) make && make install.
    5) Go to GLAD website and extract files to thirdparty/glad/.
    6.1) mkdir build/win64-release.
    6.2) Copy libgcc_s_seh-1.dll, libstdc++-6.dll, libwinpthread-1.dll, and SDL2.dll into the build folder.
    6.3) cd build/win64-release.
    6.4) cmake ../../ -G"MSYS Makefiles" -DCMAKE_BUILD_TYPE=Release -DCMAKE_C_COMPILER=/mingw64/bin/clang.exe -DCMAKE_CXX_COMPILER=/mingw64/bin/clang++.exe -DCMAKE_PREFIX_PATH=/mingw64/x86_64-w64-mingw32.
    6.5) make.
